{"remainingRequest":"D:\\porject\\vue02\\testcli3.01\\mall\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\porject\\vue02\\testcli3.01\\mall\\src\\components\\common\\scroll\\Scroll.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\porject\\vue02\\testcli3.01\\mall\\src\\components\\common\\scroll\\Scroll.vue","mtime":1616635585139},{"path":"D:\\porject\\vue02\\testcli3.01\\mall\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\porject\\vue02\\testcli3.01\\mall\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\porject\\vue02\\testcli3.01\\mall\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\porject\\vue02\\testcli3.01\\mall\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\r\nimport BSrcoll from 'better-scroll'\r\nexport default {\r\n  name: 'Scroll',\r\n  props: {\r\n    probeType: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    pullUpLoad: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      scroll: null,\r\n      message: '我是有底线的~~~'\r\n    }\r\n  },\r\n  mounted() {\r\n    // 创建BScroll 对象\r\n    this.scroll = new BSrcoll(this.$refs.wrapper, {\r\n      // 运行内部元素可以执行点击事件 默认为false\r\n      click: true,\r\n      // 监听当前滑动是否到达底部 默认为0, 0和1 都是不监听\r\n      probeType: this.probeType,\r\n      // 是否加载数据 默认false\r\n      pullUpLoad: this.pullUpLoad\r\n    })\r\n    // 监听滚动的位置\r\n    if(this.probeType === 2 || this.probeType === 3) {\r\n      this.scroll.on('scroll', (position) => {\r\n        // 把当前页面滚动的x,y的值传递给父组件\r\n        this.$emit('scroll', position)\r\n      })\r\n    }\r\n    // 监听scroll 滚动到底部\r\n    if(this.pullUpLoad) {\r\n      this.scroll.on('pullingUp', () => {\r\n        this.$emit('pullingUp')\r\n      })\r\n    }\r\n  },\r\n  methods: {\r\n    scrollTo(x, y, time=300) {\r\n      this.scroll && this.scroll.scrollTo(x, y, time)\r\n    },\r\n    finishPullUp() {\r\n      this.scroll && this.scroll.finishPullUp();\r\n    },\r\n    refresh() {\r\n      this.scroll && this.scroll.refresh();\r\n    },\r\n    getScrollY() {\r\n      return this.scroll ? this.scroll.y : 0\r\n    }\r\n  },\r\n}\r\n",{"version":3,"sources":["Scroll.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Scroll.vue","sourceRoot":"src/components/common/scroll","sourcesContent":["<template lang=\"\">\r\n  <div class=\"wrapper\" ref=\"wrapper\">\r\n    <div class=\"content\">\r\n      <slot></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport BSrcoll from 'better-scroll'\r\nexport default {\r\n  name: 'Scroll',\r\n  props: {\r\n    probeType: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    pullUpLoad: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      scroll: null,\r\n      message: '我是有底线的~~~'\r\n    }\r\n  },\r\n  mounted() {\r\n    // 创建BScroll 对象\r\n    this.scroll = new BSrcoll(this.$refs.wrapper, {\r\n      // 运行内部元素可以执行点击事件 默认为false\r\n      click: true,\r\n      // 监听当前滑动是否到达底部 默认为0, 0和1 都是不监听\r\n      probeType: this.probeType,\r\n      // 是否加载数据 默认false\r\n      pullUpLoad: this.pullUpLoad\r\n    })\r\n    // 监听滚动的位置\r\n    if(this.probeType === 2 || this.probeType === 3) {\r\n      this.scroll.on('scroll', (position) => {\r\n        // 把当前页面滚动的x,y的值传递给父组件\r\n        this.$emit('scroll', position)\r\n      })\r\n    }\r\n    // 监听scroll 滚动到底部\r\n    if(this.pullUpLoad) {\r\n      this.scroll.on('pullingUp', () => {\r\n        this.$emit('pullingUp')\r\n      })\r\n    }\r\n  },\r\n  methods: {\r\n    scrollTo(x, y, time=300) {\r\n      this.scroll && this.scroll.scrollTo(x, y, time)\r\n    },\r\n    finishPullUp() {\r\n      this.scroll && this.scroll.finishPullUp();\r\n    },\r\n    refresh() {\r\n      this.scroll && this.scroll.refresh();\r\n    },\r\n    getScrollY() {\r\n      return this.scroll ? this.scroll.y : 0\r\n    }\r\n  },\r\n}\r\n</script>\r\n<style scoped>\r\n  \r\n</style>"]}]}